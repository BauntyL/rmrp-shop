import React, { useState, useEffect } from 'react';
import { Input } from '../ui/input';
import { Label } from '../ui/label';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../ui/select';
import { Image } from 'lucide-react';

interface CarStep2Props {
  data: any;
  onDataChange: (data: any) => void;
  onValidationChange: (isValid: boolean) => void;
}

export const CarStep2: React.FC<CarStep2Props> = ({ data, onDataChange, onValidationChange }) => {
  const [formData, setFormData] = useState({
    price: data.price || 0,
    carType: data.carType || '',
    imageUrl: data.imageUrl || '',
    ...data
  });

  const updateData = (field: string, value: any) => {
    const newData = { ...formData, [field]: value };
    setFormData(newData);
    
    const updatedData = {
      ...data,
      [field]: value
    };
    
    onDataChange(updatedData);
  };

  useEffect(() => {
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    const isValid = formData.price > 0 && formData.carType.length > 0;
    onValidationChange(isValid);
  }, [formData, onValidationChange]);

  const carTypes = [
    '–°—Ç–∞–Ω–¥–∞—Ä—Ç',
    '–ö—É–ø–µ', 
    '–°–ø–æ—Ä—Ç',
    '–í–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫',
    '–ú–æ—Ç–æ—Ü–∏–∫–ª',
    '–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ'
  ];

  return (
    <div className="space-y-6">
      <div className="text-center mb-6">
        <h3 className="text-lg font-semibold text-red-400 mb-2">–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è</h3>
        <p className="text-slate-400">–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É, —Ç–∏–ø –∞–≤—Ç–æ–º–æ–±–∏–ª—è –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</p>
      </div>

      <div className="space-y-6">
        <div className="bg-white/5 rounded-lg p-4 space-y-4">
          <h4 className="text-white font-medium mb-4">üí∞ –¶–µ–Ω–∞ –∏ —Ç–∏–ø</h4>
          
          <div className="space-y-2">
            <Label htmlFor="price" className="text-slate-300">–¶–µ–Ω–∞ (‚ÇΩ) <span className="text-red-400">*</span></Label>
            <Input
              id="price"
              type="number"
              min="0"
              value={formData.price}
              onChange={(e) => updateData('price', parseInt(e.target.value) || 0)}
              placeholder="1500000"
              className="bg-slate-800 border-slate-600 text-white"
            />
            <p className="text-xs text-slate-400">–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É –≤ —Ä—É–±–ª—è—Ö</p>
          </div>

          <div className="space-y-2">
            <Label htmlFor="carType" className="text-slate-300">–¢–∏–ø –∞–≤—Ç–æ–º–æ–±–∏–ª—è <span className="text-red-400">*</span></Label>
            <Select value={formData.carType} onValueChange={(value) => updateData('carType', value)}>
              <SelectTrigger className="bg-slate-800 border-slate-600 text-white">
                <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–≤—Ç–æ–º–æ–±–∏–ª—è" />
              </SelectTrigger>
              <SelectContent className="bg-slate-800 border-slate-600">
                {carTypes.map((type) => (
                  <SelectItem key={type} value={type} className="text-white hover:bg-slate-700">
                    {type}
                  </SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div>
        </div>

        <div className="bg-white/5 rounded-lg p-4 space-y-4">
          <h4 className="text-white font-medium mb-4">üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è</h4>
          
          <div className="space-y-2">
            <Label htmlFor="imageUrl" className="text-slate-300">–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</Label>
            <Input
              id="imageUrl"
              type="url"
              value={formData.imageUrl}
              onChange={(e) => updateData('imageUrl', e.target.value)}
              placeholder="https://example.com/car-image.jpg"
              className="bg-slate-800 border-slate-600 text-white"
            />
            <p className="text-xs text-slate-400">–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è</p>
          </div>
          
          {formData.imageUrl && (
            <div className="border border-slate-600 rounded-lg p-4">
              <div className="flex items-center space-x-2 mb-2">
                <Image className="h-4 w-4 text-red-400" />
                <span className="text-sm text-slate-300">–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä:</span>
              </div>
              <img
                src={formData.imageUrl}
                alt="Preview"
                className="w-full max-w-xs h-48 object-cover rounded-lg"
                onError={(e) => {
                  e.currentTarget.style.display = 'none';
                }}
              />
            </div>
          )}
        </div>

        <div className="bg-slate-800 p-4 rounded-lg border border-slate-600">
          <p className="text-sm text-slate-400">
            <span className="text-red-400">*</span> –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
          </p>
        </div>
      </div>
    </div>
  );
};

export default CarStep2;