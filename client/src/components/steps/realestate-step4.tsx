import React, { useState } from 'react';
import { Input } from '../ui/input';
import { Label } from '../ui/label';
import { Textarea } from '../ui/textarea';
import { Checkbox } from '../ui/checkbox';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../ui/select';
import { MapPin, Phone, MessageCircle, DollarSign } from 'lucide-react';

interface RealEstateStep4Props {
  data: any;
  onDataChange: (data: any) => void;
  onValidationChange: (isValid: boolean) => void;
}

export const RealEstateStep4: React.FC<RealEstateStep4Props> = ({ data, onDataChange, onValidationChange }) => {
  const [formData, setFormData] = useState({
    price: data.price || '',
    currency: data.currency || 'RUB',
    priceType: data.priceType || 'total',
    deposit: data.deposit || '',
    commission: data.commission || '',
    utilities: data.utilities || '',
    negotiable: data.negotiable || false,
    mortgage: data.mortgage || false,
    installments: data.installments || false,
    exchange: data.exchange || false,
    exchangeDetails: data.exchangeDetails || '',
    availableFrom: data.availableFrom || '',
    minRentPeriod: data.minRentPeriod || '',
    contactName: data.contactName || '',
    contactPhone: data.contactPhone || '',
    contactEmail: data.contactEmail || '',
    preferredContact: data.preferredContact || 'phone',
    availableTime: data.availableTime || '',
    showingSchedule: data.showingSchedule || '',
    additionalNotes: data.additionalNotes || ''
  });

  const updateData = (field: string, value: any) => {
    const newData = { ...formData, [field]: value };
    setFormData(newData);
    onDataChange(newData);
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    const isValid = newData.price && newData.contactName && newData.contactPhone;
    onValidationChange(isValid);
  };

  return (
    <div className="space-y-6">
      <div className="text-center mb-6">
        <h3 className="text-lg font-semibold text-white mb-2">–¶–µ–Ω–∞ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã</h3>
        <p className="text-white/80 text-sm">–£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —É—Å–ª–æ–≤–∏—è —Å–¥–µ–ª–∫–∏</p>
      </div>

      <div className="bg-white/5 rounded-lg p-6 space-y-4">
        <h4 className="text-white font-medium mb-4 flex items-center">
          <DollarSign className="w-4 h-4 mr-2" />
          –°—Ç–æ–∏–º–æ—Å—Ç—å
        </h4>
        
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div className="md:col-span-2">
            <Label htmlFor="price" className="text-white">–¶–µ–Ω–∞ *</Label>
            <Input
              id="price"
              type="number"
              value={formData.price}
              onChange={(e) => updateData('price', e.target.value)}
              placeholder="5000000"
              className="bg-white/10 border-white/20 text-white placeholder:text-white/50"
            />
          </div>
          
          <div>
            <Label htmlFor="currency" className="text-white">–í–∞–ª—é—Ç–∞</Label>
            <Select value={formData.currency} onValueChange={(value) => updateData('currency', value)}>
              <SelectTrigger className="bg-white/10 border-white/20 text-white">
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="RUB">‚ÇΩ –†—É–±–ª–∏</SelectItem>
                <SelectItem value="USD">$ –î–æ–ª–ª–∞—Ä—ã</SelectItem>
                <SelectItem value="EUR">‚Ç¨ –ï–≤—Ä–æ</SelectItem>
              </SelectContent>
            </Select>
          </div>
        </div>

        <div>
          <Label htmlFor="priceType" className="text-white">–¢–∏–ø —Ü–µ–Ω—ã</Label>
          <Select value={formData.priceType} onValueChange={(value) => updateData('priceType', value)}>
            <SelectTrigger className="bg-white/10 border-white/20 text-white">
              <SelectValue />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="total">–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å</SelectItem>
              <SelectItem value="per_sqm">–ó–∞ –º¬≤</SelectItem>
              <SelectItem value="monthly">–í –º–µ—Å—è—Ü</SelectItem>
              <SelectItem value="daily">–í —Å—É—Ç–∫–∏</SelectItem>
            </SelectContent>
          </Select>
        </div>

        {(formData.priceType === 'monthly' || formData.priceType === 'daily') && (
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <Label htmlFor="deposit" className="text-white">–ó–∞–ª–æ–≥</Label>
              <Input
                id="deposit"
                type="number"
                value={formData.deposit}
                onChange={(e) => updateData('deposit', e.target.value)}
                placeholder="50000"
                className="bg-white/10 border-white/20 text-white placeholder:text-white/50"
              />
            </div>
            
            <div>
              <Label htmlFor="utilities" className="text-white">–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏</Label>
              <Input
                id="utilities"
                type="number"
                value={formData.utilities}
                onChange={(e) => updateData('utilities', e.target.value)}
                placeholder="5000"
                className="bg-white/10 border-white/20 text-white placeholder:text-white/50"
              />
            </div>
          </div>
        )}

        <div>
          <Label htmlFor="commission" className="text-white">–ö–æ–º–∏—Å—Å–∏—è –∞–≥–µ–Ω—Ç–∞ (%)</Label>
          <Input
            id="commission"
            type="number"
            step="0.1"
            value={formData.commission}
            onChange={(e) => updateData('commission', e.target.value)}
            placeholder="3.0"
            className="bg-white/10 border-white/20 text-white placeholder:text-white/50"
          />
        </div>

        <div className="space-y-3">
          <div className="flex items-center space-x-2">
            <Checkbox
              id="negotiable"
              checked={formData.negotiable}
              onCheckedChange={(checked) => updateData('negotiable', checked)}
              className="border-white/20"
            />
            <Label htmlFor="negotiable" className="text-white">–¢–æ—Ä–≥ —É–º–µ—Å—Ç–µ–Ω</Label>
          </div>

          <div className="flex items-center space-x-2">
            <Checkbox
              id="mortgage"
              checked={formData.mortgage}
              onCheckedChange={(checked) => updateData('mortgage', checked)}
              className="border-white/20"
            />
            <Label htmlFor="mortgage" className="text-white">–í–æ–∑–º–æ–∂–Ω–∞ –∏–ø–æ—Ç–µ–∫–∞</Label>
          </div>

          <div className="flex items-center space-x-2">
            <Checkbox
              id="installments"
              checked={formData.installments}
              onCheckedChange={(checked) => updateData('installments', checked)}
              className="border-white/20"
            />
            <Label htmlFor="installments" className="text-white">–†–∞—Å—Å—Ä–æ—á–∫–∞</Label>
          </div>

          <div className="flex items-center space-x-2">
            <Checkbox
              id="exchange"
              checked={formData.exchange}
              onCheckedChange={(checked) => updateData('exchange', checked)}
              className="border-white/20"
            />
            <Label htmlFor="exchange" className="text-white">–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é –æ–±–º–µ–Ω</Label>
          </div>
        </div>

        {formData.exchange && (
          <div>
            <Label htmlFor="exchangeDetails" className="text-white">–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–±–º–µ–Ω–∞</Label>
            <Textarea
              id="exchangeDetails"
              value={formData.exchangeDetails}
              onChange={(e) => updateData('exchangeDetails', e.target.value)}
              placeholder="–û–ø–∏—à–∏—Ç–µ, –Ω–∞ –∫–∞–∫—É—é –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –≥–æ—Ç–æ–≤—ã –æ–±–º–µ–Ω—è—Ç—å..."
              className="bg-white/10 border-white/20 text-white placeholder:text-white/50 min-h-[80px]"
            />
          </div>
        )}
      </div>

      <div className="bg-white/5 rounded-lg p-6 space-y-4">
        <h4 className="text-white font-medium mb-4">üìÖ –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å</h4>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <Label htmlFor="availableFrom" className="text-white">–î–æ—Å—Ç—É–ø–Ω–æ —Å</Label>
            <Input
              id="availableFrom"
              type="date"
              value={formData.availableFrom}
              onChange={(e) => updateData('availableFrom', e.target.value)}
              className="bg-white/10 border-white/20 text-white"
            />
          </div>

          {(formData.priceType === 'monthly' || formData.priceType === 'daily') && (
            <div>
              <Label htmlFor="minRentPeriod" className="text-white">–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å—Ä–æ–∫ –∞—Ä–µ–Ω–¥—ã</Label>
              <Select value={formData.minRentPeriod} onValueChange={(value) => updateData('minRentPeriod', value)}>
                <SelectTrigger className="bg-white/10 border-white/20 text-white">
                  <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ä–æ–∫" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="1_day">1 –¥–µ–Ω—å</SelectItem>
                  <SelectItem value="1_week">1 –Ω–µ–¥–µ–ª—è</SelectItem>
                  <SelectItem value="1_month">1 –º–µ—Å—è—Ü</SelectItem>
                  <SelectItem value="3_months">3 –º–µ—Å—è—Ü–∞</SelectItem>
                  <SelectItem value="6_months">6 –º–µ—Å—è—Ü–µ–≤</SelectItem>
                  <SelectItem value="1_year">1 –≥–æ–¥</SelectItem>
                  <SelectItem value="long_term">–î–ª–∏—Ç–µ–ª—å–Ω–æ</SelectItem>
                </SelectContent>
              </Select>
            </div>
          )}
        </div>

        <div>
          <Label htmlFor="showingSchedule" className="text-white">–ì—Ä–∞—Ñ–∏–∫ –ø–æ–∫–∞–∑–æ–≤</Label>
          <Input
            id="showingSchedule"
            value={formData.showingSchedule}
            onChange={(e) => updateData('showingSchedule', e.target.value)}
            placeholder="–ë—É–¥–Ω–∏ —Å 10:00 –¥–æ 18:00, –≤—ã—Ö–æ–¥–Ω—ã–µ –ø–æ –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏"
            className="bg-white/10 border-white/20 text-white placeholder:text-white/50"
          />
        </div>
      </div>

      <div className="bg-white/5 rounded-lg p-6 space-y-4">
        <h4 className="text-white font-medium mb-4 flex items-center">
          <Phone className="w-4 h-4 mr-2" />
          –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        </h4>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <Label htmlFor="contactName" className="text-white">–ò–º—è *</Label>
            <Input
              id="contactName"
              value={formData.contactName}
              onChange={(e) => updateData('contactName', e.target.value)}
              placeholder="–í–∞—à–µ –∏–º—è"
              className="bg-white/10 border-white/20 text-white placeholder:text-white/50"
            />
          </div>

          <div>
            <Label htmlFor="contactPhone" className="text-white">–¢–µ–ª–µ—Ñ–æ–Ω *</Label>
            <Input
              id="contactPhone"
              value={formData.contactPhone}
              onChange={(e) => updateData('contactPhone', e.target.value)}
              placeholder="+7 (999) 123-45-67"
              className="bg-white/10 border-white/20 text-white placeholder:text-white/50"
            />
          </div>

          <div>
            <Label htmlFor="contactEmail" className="text-white">Email</Label>
            <Input
              id="contactEmail"
              type="email"
              value={formData.contactEmail}
              onChange={(e) => updateData('contactEmail', e.target.value)}
              placeholder="your@email.com"
              className="bg-white/10 border-white/20 text-white placeholder:text-white/50"
            />
          </div>

          <div>
            <Label htmlFor="preferredContact" className="text-white">–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏</Label>
            <Select value={formData.preferredContact} onValueChange={(value) => updateData('preferredContact', value)}>
              <SelectTrigger className="bg-white/10 border-white/20 text-white">
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="phone">–¢–µ–ª–µ—Ñ–æ–Ω</SelectItem>
                <SelectItem value="whatsapp">WhatsApp</SelectItem>
                <SelectItem value="telegram">Telegram</SelectItem>
                <SelectItem value="email">Email</SelectItem>
              </SelectContent>
            </Select>
          </div>
        </div>

        <div>
          <Label htmlFor="availableTime" className="text-white">–£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∑–≤–æ–Ω–∫–æ–≤</Label>
          <Input
            id="availableTime"
            value={formData.availableTime}
            onChange={(e) => updateData('availableTime', e.target.value)}
            placeholder="—Å 9:00 –¥–æ 21:00, –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–æ 18:00"
            className="bg-white/10 border-white/20 text-white placeholder:text-white/50"
          />
        </div>
      </div>

      <div>
        <Label htmlFor="additionalNotes" className="text-white">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏</Label>
        <Textarea
          id="additionalNotes"
          value={formData.additionalNotes}
          onChange={(e) => updateData('additionalNotes', e.target.value)}
          placeholder="–õ—é–±–∞—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π/–∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–æ–≤..."
          className="bg-white/10 border-white/20 text-white placeholder:text-white/50 min-h-[100px]"
        />
      </div>

      <div className="bg-green-500/10 border border-green-500/20 rounded-lg p-4">
        <h4 className="text-green-400 font-medium mb-2 flex items-center">
          <MessageCircle className="w-4 h-4 mr-2" />
          –ì–æ—Ç–æ–≤–æ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏!
        </h4>
        <p className="text-green-300/80 text-sm">
          –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π. –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤—ã —Å–º–æ–∂–µ—Ç–µ –µ–≥–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ.
        </p>
      </div>
    </div>
  );
};