datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int           @id @default(autoincrement())
  firstName      String
  lastName       String
  email         String        @unique
  username      String        @unique
  password      String
  role          String        @default("user") // "admin", "moderator", "user"
  isBanned      Boolean       @default(false)
  banReason     String?
  createdAt     DateTime      @default(now())
  lastLoginAt   DateTime      @default(now())
  profileImageUrl String?
  products      Product[]
  messages      Message[]
  conversations Conversation[]
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  displayName String
  color       String?
  products    Product[]
}

model Server {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  displayName String
  products    Product[]
}

model Product {
  id             Int           @id @default(autoincrement())
  title          String
  description    String
  price          Float
  images         String[]
  status         String        @default("pending") // "pending", "approved", "rejected"
  moderationNote String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  userId         Int
  user           User          @relation(fields: [userId], references: [id])
  categoryId     Int
  category       Category      @relation(fields: [categoryId], references: [id])
  serverId       Int
  server         Server        @relation(fields: [serverId], references: [id])
  conversations  Conversation[]
}

model Message {
  id             Int          @id @default(autoincrement())
  content        String
  createdAt      DateTime     @default(now())
  readAt         DateTime?
  isModerated    Boolean      @default(false)
  userId         Int
  user           User         @relation(fields: [userId], references: [id])
  conversationId Int
  conversation   Conversation @relation(fields: [conversationId], references: [id])
}

model Conversation {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  productId Int?
  product   Product?  @relation(fields: [productId], references: [id])
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  messages  Message[]
} 